
name = "tests data";

activate =
{
  relu = ({ test_index = 0;
            input_name= "Random Double CPU with Dims{3,6,10,120,600} for ReLU";
            ndim = 5;
            dims = [3,6,10,120,600];
            dtype = 9;
            device = 0;
            len = 0;},
            );

  sigmoid = ({ test_index = 1;
               input_name= "Random Float CPU with Dims{30,40,100,600} for Sigmoid";
               ndim = 4;
               dims = [3,40,100,600];
               dtype = 8;
               device = 0;
               len = 0;},
               );

  tanh = ({ test_index = 2;
            input_name= "Random FLoat CPU with Dims{30,40,120,60} for Tanh";
            ndim = 4;
            dims = [30,40,120,60];
            dtype = 8;
            device = 0;
            len = 0;},
            );

  sqrt = ({ test_index = 3;
            input_name= "Full FLoat CPU with Dims{30,80,120,60} for Sqrt";
            ndim = 4;
            dims = [30,80,120,60];
            dtype = 8;
            device = 0;
            len = 0;},
            );
};

batch_norm = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{2, 3, 2, 2}, axis{1}, epsilon{1e-5}, param_ndim{1}, param_dims{3}, value{1}, mean{0.5}, var{0}";
    ndim = 4;
    dims = [2,3,2,2];
    dtype = 8;
    device = 0;
    len = 0;
    axis = 1;
    epsilon = 1e-5;
    param_ndim = 1;
    param_dims = [3];
    value = 1.0;
    mean = 0.5;
    var = 0.0;
},
{
    test_index = 1;
    input_name = "Random float of CPU with InputDims{200, 300, 20, 20}, axis{1}, epsilon{1e-5}, param_ndim{1}, param_dims{300}, value{1}, mean{0.5}, var{0}";
    ndim = 4;
    dims = [200,300,20,20];
    dtype = 8;
    device = 0;
    len = 0;
    axis = 1;
    epsilon = 1e-5;
    param_ndim = 1;
    param_dims = [300];
    value = 1.0;
    mean = 0.5;
    var = 0.0;
},
)

binary_op =
{
  add = ({ test_index = 0;
           input_name= "Natural int32 CPU with Dims{10,6} and Dims{10,6} for add";
           ndim1 = 2;
           dims1 = [10, 6];
           dtype1 = 4;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [10, 6];
           dtype2 = 4;
           device2 = 0;
           len2 = 0;},
           );

  sub = ({ test_index = 1;
           input_name= "Random Double CPU with Dims{2013,2018} and Dims{2013,2018} dor sub";
           ndim1 = 2;
           dims1 = [2013, 2018];
           dtype1 = 9;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [2013, 2018];
           dtype2 = 9;
           device2 = 0;
           len2 = 0;},
           );

  mul = ({ test_index = 2;
           input_name= "Natural int32 CPU with Dims{10,6} and Dims{10,6} for add";
           ndim1 = 3;
           dims1 = [10, 3, 2];
           dtype1 = 7;
           device1 = 0;
           len1 = 0;
           ndim2 = 3;
           dims2 = [10, 3, 2];
           dtype2 = 7;
           device2 = 0;
           len2 = 0;},
           );

  div = ({ test_index = 3;
           input_name= "Natural Float CPU with Dims{5} and Dims{5} for div";
           ndim1 = 1;
           dims1 = [5];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 1;
           dims2 = [5];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );
};

conv2d = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{6,32,124,128}, FilterDims{64,32,2,2}, stride{2,2}, padding{0,0}, dilation{1,1}";
    ndim1 = 4;
    dims1 = [6, 32, 124, 128];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 4;
    dims2 = [64, 32, 2, 2];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
    stride = [2, 2];
    padding = [0, 0];
    dilation = [1, 1];
    groups = 1;
},
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{7,16,100,100}, FilterDims{32,16,3,3}, stride{3,3}, padding{1,0}, dilation{2,2}";
    ndim1 = 4;
    dims1 = [7, 16, 100, 180];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 4;
    dims2 = [32, 16, 3, 3];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
    stride = [3, 3];
    padding = [1, 0];
    dilation = [2, 2];
    groups = 1;},
)

drop_out = (
{
    test_index = 0;
    input_name = "Full float of CPU with InputDims{256, 256,256}, rate{0.5}";
    ndim = 3;
    dims = [256, 256, 256];
    dtype = 8;
    device = 0;
    len = 0;
    rate = 0.5;
    initvalue = 1;
},
{
    test_index = 0;
    input_name = "Full float of CPU with InputDims{64, 64, 64, 64}, rate{0.7}";
    ndim = 4;
    dims = [64, 64, 64, 64];
    dtype = 8;
    device = 0;
    len = 0;
    rate = 0.7;
    initvalue = 1;},
)