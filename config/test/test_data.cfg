
name = "tests data";

activate =
{
  relu = ({ test_index = 0;
            input_name= "Random Double CPU with Dims{3,6,10,120,60} for ReLU";
            ndim = 5;
            dims = [3,6,10,120,60];
            dtype = 9;
            device = 0;
            len = 0;},
            );

  sigmoid = ({ test_index = 0;
               input_name= "Random Float CPU with Dims{3,40,100,60} for Sigmoid";
               ndim = 4;
               dims = [3,40,100,60];
               dtype = 8;
               device = 0;
               len = 0;},
               );

  tanh = ({ test_index = 0;
            input_name= "Random FLoat CPU with Dims{30,40,12,6} for Tanh";
            ndim = 4;
            dims = [30,40,12,6];
            dtype = 8;
            device = 0;
            len = 0;},
            );

  sqrt = ({ test_index = 0;
            input_name= "Full FLoat CPU with Dims{30,80,12,6} for Sqrt";
            ndim = 4;
            dims = [30,80,12,6];
            dtype = 8;
            device = 0;
            len = 0;},
            );
};

batch_norm = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{10,30,50,20}, axis{1}, epsilon{1e-5}, param_ndim{1}, param_dims{30}, value{1}, mean{0.5}, var{0}";
    ndim = 4;
    dims = [10,30,50,20];
    dtype = 8;
    device = 0;
    len = 0;
    axis = 1;
    epsilon = 1e-5;
    param_ndim = 1;
    param_dims = [30];
    value = 1.0;
    mean = 0.5;
    var = 0.0;
},
{
    test_index = 1;
    input_name = "Random float of CPU with InputDims{20, 30, 20, 20}, axis{1}, epsilon{1e-5}, param_ndim{1}, param_dims{30}, value{1}, mean{0.5}, var{0}";
    ndim = 4;
    dims = [20,30,20,20];
    dtype = 8;
    device = 0;
    len = 0;
    axis = 1;
    epsilon = 1e-5;
    param_ndim = 1;
    param_dims = [30];
    value = 1.0;
    mean = 0.5;
    var = 0.0;
},
)

binary_op =
{
  add = ({ test_index = 0;
           input_name= "Natural int32 CPU with Dims{1000, 1000} and Dims{1000, 1000} for add";
           ndim1 = 2;
           dims1 = [1000, 1000];
           dtype1 = 4;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [1000, 1000];
           dtype2 = 4;
           device2 = 0;
           len2 = 0;},
           );

  sub = ({ test_index = 0;
           input_name= "Random Double CPU with Dims{1000, 1000} and Dims{1000, 1000} for sub";
           ndim1 = 2;
           dims1 = [1000, 1000];
           dtype1 = 9;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [1000, 1000];
           dtype2 = 9;
           device2 = 0;
           len2 = 0;},
           );

  mul = ({ test_index = 0;
           input_name= "Natural Float CPU with Dims{1000, 1000} and Dims{1000, 1000} for mul";
           ndim1 = 2;
           dims1 = [1000, 1000];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [1000, 1000];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );

  div = ({ test_index = 0;
           input_name= "Natural Float CPU with Dims{1000, 1000} and Dims{1000, 1000} for div";
           ndim1 = 2;
           dims1 = [1000, 1000];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [1000, 1000];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );
};

conv2d = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{6, 8, 16, 16}, FilterDims{32, 8, 2, 2}, stride{2,2}, padding{0,0}, dilation{1,1}";
    ndim1 = 4;
    dims1 = [6, 8, 16, 16];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 4;
    dims2 = [32, 8, 2, 2];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
    stride = [2, 2];
    padding = [0, 0];
    dilation = [1, 1];
    groups = 1;
},
{
    test_index = 1;
    input_name = "Random float of CPU with InputDims{7, 16, 8, 8}, FilterDims{32, 16, 3, 3}, stride{3,3}, padding{1,0}, dilation{2,2}";
    ndim1 = 4;
    dims1 = [7, 16, 8, 8];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 4;
    dims2 = [32, 16, 3, 3];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
    stride = [3, 3];
    padding = [1, 0];
    dilation = [2, 2];
    groups = 1;},
)

drop_out = (
{
    test_index = 0;
    input_name = "Full float of CPU with InputDims{64, 128, 64}, rate{0.5}";
    ndim = 3;
    dims = [64, 128, 64];
    dtype = 8;
    device = 0;
    len = 0;
    rate = 0.5;
    initvalue = 1;
},
{
    test_index = 1;
    input_name = "Full float of CPU with InputDims{16, 32, 32, 16}, rate{0.8}";
    ndim = 4;
    dims = [16, 32, 32, 16];
    dtype = 8;
    device = 0;
    len = 0;
    rate = 0.8;
    initvalue = 1;},
)

matmul = (
{
    test_index = 0;
    input_name = "Natural Float CPU with Dims{10} and Dims{10}";
    ndim1 = 1;
    dims1 = [10];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 1;
    dims2 = [10];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
},
{
    test_index = 1;
    input_name = "Natural Float CPU with Dims{10} and Dims{10,5}";
    ndim1 = 1;
    dims1 = [10];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 2;
    dims2 = [10, 5];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
},
{
    test_index = 2;
    input_name = "Natural Float CPU with Dims{10,5} and Dims{5}";
    ndim1 = 2;
    dims1 = [10, 5];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 1;
    dims2 = [5];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
},
{
    test_index = 3;
    input_name = "Natural Float CPU with Dims{3} and Dims{2,2,4,3,2}";
    ndim1 = 1;
    dims1 = [3];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 5;
    dims2 = [2, 2, 4, 3, 2];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
},
{
    test_index = 4;
    input_name = "Natural Float CPU with Dims{2,2,4,2,3} and Dims{3}";
    ndim1 = 5;
    dims1 = [2, 2, 4, 2, 3];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 1;
    dims2 = [3];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
},
{
    test_index = 5;
    input_name = "Natural Float CPU with Dims{2,4,3} and Dims{3,2,3,2}";
    ndim1 = 3;
    dims1 = [2, 4, 3];
    dtype1 = 8;
    device1 = 0;
    len1 = 0;
    ndim2 = 4;
    dims2 = [3, 2, 3, 2];
    dtype2 = 8;
    device2 = 0;
    len2 = 0;
},
)

pooling = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{50, 30, 50, 40}, ksize{2, 2}, stride{2,2}, padding{0,0}, dilation{1,1}, mode{avg}";
    ndim = 4;
    dims = [5, 3, 50, 40];
    dtype = 8;
    device = 0;
    len = 0;
    stride = [1, 1];
    padding = [0, 0];
    dilation = [1, 1];
    ksize = [2, 2];
    mod = "avg";
},
{
    test_index = 1;
    input_name = "Random float of CPU with InputDims{3, 2, 4, 6}, ksize{3, 2}, stride{3,3}, padding{0,0}, dilation{1,1}, mode{max}";
    ndim = 4;
    dims = [3, 2, 4, 6];
    dtype = 8;
    device = 0;
    len = 0;
    stride = [2, 2];
    padding = [0, 0];
    dilation = [1, 1];
    ksize = [3, 2];
    mod = "max";
},
)

softmax = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{64, 64, 64}, axis{2}";
    ndim = 3;
    dims = [64, 64, 64];
    dtype = 8;
    device = 0;
    len = 0;
    axis = 2;
},
{
    test_index = 1;
    input_name = "Random float of CPU with InputDims{16, 16, 16, 16}, axis{3}";
    ndim = 4;
    dims = [16, 16, 16, 16];
    dtype = 8;
    device = 0;
    len = 0;
    axis = 3;
},
)

transpose = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{200,30,200} ";
    ndim = 3;
    dims = [200,30,200];
    dtype = 8;
    device = 0;
    len = 0;
},
{
    test_index = 1;
    input_name = "Random float of CPU with InputDims{20,30,200,100} ";
    ndim = 4;
    dims = [20,30,20,100];
    dtype = 8;
    device = 0;
    len = 0;
}
)

rot90 = (
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{3,2000,1000} ";
    ndim = 3;
    dims = [3,2000,1000];
    k = 1;
    dtype = 8;
    device = 0;
    len = 0;
},
{
    test_index = 0;
    input_name = "Random float of CPU with InputDims{100,3,200,100} ";
    ndim = 4;
    dims = [100,3,200,100];
    k = 1;
    dtype = 8;
    device = 0;
    len = 0;
}
)

compare =
{
  equal = ({ test_index = 0;
           input_name= "Natural Float CPU with Dims{2000, 300}";
           ndim1 = 2;
           dims1 = [2000, 300];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [2000, 300];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );

  greater_equal = ({ test_index = 0;
           input_name= "Natural Float CPU with Dims{2000, 300}";
           ndim1 = 2;
           dims1 = [2000, 300];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [2000, 300];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );

  greater = ({ test_index = 0;
           input_name= "Random Float CPU with Dims{2000, 300}";
           ndim1 = 2;
           dims1 = [2000, 300];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [2000, 300];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );

  less_equal = ({ test_index = 0;
           input_name= "Natural Float CPU with Dims{2000, 300}";
           ndim1 = 2;
           dims1 = [2000, 300];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [2000, 300];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );

  less = ({ test_index = 0;
           input_name= "Natural Float CPU with Dims{2000,300}";
           ndim1 = 2;
           dims1 = [2000,300];
           dtype1 = 8;
           device1 = 0;
           len1 = 0;
           ndim2 = 2;
           dims2 = [2000,300];
           dtype2 = 8;
           device2 = 0;
           len2 = 0;},
           );
};

unary_expr =
{
  exp = ({ test_index = 0;
           input_name= "Random Double CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dtype = 8;
           device = 0;
           len = 0;},
           );

  log = ({ test_index = 0;
           input_name= "Random Float CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dtype = 8;
           device = 0;
           len = 0;},
           );

  neg = ({ test_index = 0;
           input_name= "Random FLoat CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dtype = 8;
           device = 0;
           len = 0;},
           );

  abs = ({ test_index = 0;
           input_name= "Random FLoat CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dtype = 8;
           device = 0;
           len = 0;},
           );

  square = ({ test_index = 0;
           input_name= "Random FLoat CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dtype = 8;
           device = 0;
           len = 0;},
           );

};

elu = (
{
    test_index = 0;
    input_name = "Full float of CPU with InputDims{64, 128, 64}, alpha{1.0}";
    ndim = 3;
    dims = [64, 128, 64];
    dtype = 8;
    device = 0;
    len = 0;
    alpha = 1.0;
}
)

arg_reduce =
{
  argmin = ({ test_index = 0;
           input_name= "Random Double CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dim = 1;
           dtype = 8;
           device = 0;
           len = 0;},
           );

  argmax = ({ test_index = 0;
           input_name= "Random Float CPU with Dims{5000,1000}";
           ndim = 2;
           dims = [5000,1000];
           dim = 1;
           dtype = 8;
           device = 0;
           len = 0;},
           );

};

reduce =
{
  reduce_sum = ({ test_index = 0;
                  input_name = "Random float of CPU with InputDims{400,50,60}";
                  ndim = 3;
                  dims = [400,50,60];
                  dtype = 8;
                  device = 0;
                  len = 0;
                  dim_len = 2;
                  dim = [2,1];
                  keepdim = 1;},
                  );

  reduce_mean = ({ test_index = 0;
                   input_name = "Random float of CPU with InputDims{400,50,60}";
                   ndim = 3;
                   dims = [400,50,60];
                   dtype = 8;
                   device = 0;
                   len = 0;
                   dim_len= 2;
                   dim = [2,1];
                   keepdim = 0;},
                   );

  reduce_min = ({ test_index = 0;
                   input_name = "Random float of CPU with InputDims{4000,200}";
                   ndim = 2;
                   dims = [4000,200];
                   dtype = 8;
                   device = 0;
                   len = 0;
                   dim_len= 1;
                   dim = [1];
                   keepdim = 1;},
                   );

  reduce_max = ({ test_index = 0;
                   input_name = "Random float of CPU with InputDims{4000,200}";
                   ndim = 2;
                   dims = [4000,200];
                   dtype = 8;
                   device = 0;
                   len = 0;
                   dim_len= 1;
                   dim = [1];
                   keepdim = 1;},
                   );
};